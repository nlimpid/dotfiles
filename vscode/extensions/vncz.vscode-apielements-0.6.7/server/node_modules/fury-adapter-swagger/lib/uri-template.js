'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = buildUriTemplate;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function buildUriTemplate(basePath, href) {
  var pathObjectParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var queryParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

  if (queryParams.length > 0 || pathObjectParams.length > 0) {
    // Path object parameters apply to all nested resources (operations). Only
    // the ones marked as query parameters are relevant though
    var pathObjectParamNames = pathObjectParams.filter(function (parameter) {
      return parameter.in === 'query';
    }).map(function (parameter) {
      return parameter.name;
    });

    var queryParamNames = queryParams.map(function (parameter) {
      return parameter.name;
    });

    // There can be duplicate parameter names, so we need the unique list
    var paramNames = _lodash2.default.uniq([].concat(pathObjectParamNames, queryParamNames));
    var paramNamesString = paramNames.length ? '{?' + paramNames.join(',') + '}' : '';

    var full = '' + basePath + href + paramNamesString;

    // Before returning, we replace instances of `-` with `%2d`, but only when
    // they occur inside of a template variable.
    return full.replace(/\{.*?\}/g, function (match) {
      return match.replace('-', '%2d');
    });
  }

  return basePath + href;
}
//# sourceMappingURL=uri-template.map