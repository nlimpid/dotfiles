'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

exports['default'] = function (namespace) {
  var DataStructure = (function (_namespace$BaseElement) {
    _inherits(DataStructure, _namespace$BaseElement);

    function DataStructure() {
      _classCallCheck(this, DataStructure);

      _get(Object.getPrototypeOf(DataStructure.prototype), 'constructor', this).apply(this, arguments);
      this.element = 'dataStructure';
      if (this.content !== undefined) {
        this.content = namespace.toElement(this.content);
      }
    }

    _createClass(DataStructure, [{
      key: 'toValue',
      value: function toValue() {
        return this.content && this.content.toValue();
      }
    }, {
      key: 'toRefract',
      value: function toRefract() {
        var refract = _get(Object.getPrototypeOf(DataStructure.prototype), 'toRefract', this).call(this);

        if (Array.isArray(this.content)) {
          refract.content = this.content.map(function (item) {
            return item.toRefract();
          });
        } else {
          refract.content = this.content.toRefract();
        }

        return refract;
      }
    }, {
      key: 'fromRefract',
      value: function fromRefract(doc) {
        _get(Object.getPrototypeOf(DataStructure.prototype), 'fromRefract', this).call(this, doc);

        if (Array.isArray(doc.content)) {
          this.content = doc.content.map(function (item) {
            return namespace.fromRefract(item);
          });
        } else {
          this.content = namespace.fromRefract(doc.content);
        }

        return this;
      }
    }]);

    return DataStructure;
  })(namespace.BaseElement);

  namespace.register('dataStructure', DataStructure);
};

module.exports = exports['default'];
//# sourceMappingURL=data-structure.map