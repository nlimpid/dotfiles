'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

exports['default'] = function (namespace) {
  var ArrayElement = namespace.getElementClass('array');

  var HttpHeaders = (function (_ArrayElement) {
    _inherits(HttpHeaders, _ArrayElement);

    function HttpHeaders() {
      _classCallCheck(this, HttpHeaders);

      _get(Object.getPrototypeOf(HttpHeaders.prototype), 'constructor', this).apply(this, arguments);
      this.element = 'httpHeaders';
    }

    _createClass(HttpHeaders, [{
      key: 'toValue',
      value: function toValue() {
        return this.map(function (item) {
          return [item.key.toValue(), item.value.toValue()];
        });
      }
    }, {
      key: 'include',
      value: function include(name) {
        return this.filter(function (item) {
          var key = item.key.toValue();

          // Note: this may not be a string, hence the duck-Element check below!
          return !key.toLowerCase || key.toLowerCase() === name.toLowerCase();
        });
      }
    }, {
      key: 'exclude',
      value: function exclude(name) {
        return this.filter(function (item) {
          var key = item.key.toValue();

          // Note: this may not be a string, hence the duck-Element check below!
          return !key.toLowerCase || key.toLowerCase() !== name.toLowerCase();
        });
      }
    }]);

    return HttpHeaders;
  })(ArrayElement);

  namespace.register('httpHeaders', HttpHeaders);
};

module.exports = exports['default'];
//# sourceMappingURL=http-headers.map