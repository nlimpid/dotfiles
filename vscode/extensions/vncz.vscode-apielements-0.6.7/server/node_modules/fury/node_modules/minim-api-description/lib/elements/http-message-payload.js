'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

exports['default'] = function (namespace) {
  var ArrayElement = namespace.getElementClass('array');

  var HttpMessagePayload = (function (_ArrayElement) {
    _inherits(HttpMessagePayload, _ArrayElement);

    function HttpMessagePayload() {
      _classCallCheck(this, HttpMessagePayload);

      _get(Object.getPrototypeOf(HttpMessagePayload.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(HttpMessagePayload, [{
      key: 'header',
      value: function header(name) {
        var headers = this.attributes.get('headers');
        var header = null;

        if (headers) {
          header = headers.include(name).map(function (item) {
            return item.value.toValue();
          });
        }

        return header;
      }
    }, {
      key: 'headers',
      get: function get() {
        return this.attributes.get('headers');
      },
      set: function set(value) {
        this.attributes.set('headers', value);
      }
    }, {
      key: 'contentType',
      get: function get() {
        var header = this.header('Content-Type');
        if (header) {
          return header.join(', ');
        }

        return this.content && this.content.contentType;
      }
    }, {
      key: 'dataStructure',
      get: function get() {
        return this.findByElement('dataStructure').first();
      }
    }, {
      key: 'messageBody',
      get: function get() {
        // Returns the *first* message body. Only one should be defined according
        // to the spec, but it's possible to include more.
        return this.filter(function (item) {
          return item.element === 'asset' && item.classes.contains('messageBody');
        }).first();
      }
    }, {
      key: 'messageBodySchema',
      get: function get() {
        // Returns the *first* message body schema. Only one should be defined
        // according to the spec, but it's possible to include more.
        return this.filter(function (item) {
          return item.element === 'asset' && item.classes.contains('messageBodySchema');
        }).first();
      }
    }]);

    return HttpMessagePayload;
  })(ArrayElement);

  require('./http-request')(namespace, HttpMessagePayload);
  require('./http-response')(namespace, HttpMessagePayload);
};

module.exports = exports['default'];