'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

exports['default'] = function (namespace) {
  var ArrayElement = namespace.getElementClass('array');
  var AuthScheme = namespace.getElementClass('authScheme');

  var HttpTransaction = (function (_ArrayElement) {
    _inherits(HttpTransaction, _ArrayElement);

    function HttpTransaction() {
      _classCallCheck(this, HttpTransaction);

      _get(Object.getPrototypeOf(HttpTransaction.prototype), 'constructor', this).apply(this, arguments);
      this.element = 'httpTransaction';
    }

    _createClass(HttpTransaction, [{
      key: 'request',
      get: function get() {
        return this.children(function (item) {
          return item.element === 'httpRequest';
        }).first();
      }
    }, {
      key: 'response',
      get: function get() {
        return this.children(function (item) {
          return item.element === 'httpResponse';
        }).first();
      }
    }, {
      key: 'authSchemes',
      get: function get() {
        return namespace.toElement(this.attributes.get('authSchemes').map(function (item) {
          return new AuthScheme().fromRefract(item);
        }));
      }
    }]);

    return HttpTransaction;
  })(ArrayElement);

  namespace.register('httpTransaction', HttpTransaction);
};

module.exports = exports['default'];
//# sourceMappingURL=http-transaction.map